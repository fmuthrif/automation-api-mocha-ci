{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-06T05:52:29.066Z",
    "end": "2025-03-06T05:52:29.428Z",
    "duration": 362,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6a503c41-fbba-4772-83a5-5e6de9607754",
      "title": "",
      "fullFile": "D:\\automation-api-mocha-ci\\test\\get_list_user.js",
      "file": "\\test\\get_list_user.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "21a1b029-379e-4406-bff8-d8d3e631252a",
          "title": "@GET GET List of Users",
          "fullFile": "D:\\automation-api-mocha-ci\\test\\get_list_user.js",
          "file": "\\test\\get_list_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9af46eef-6316-420a-aab6-d420ab0ebb4a",
              "title": "@GET GET List of Users - Negative Case",
              "fullFile": "D:\\automation-api-mocha-ci\\test\\get_list_user.js",
              "file": "\\test\\get_list_user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "as a User, I cannot get list of users with an invalid auth",
                  "fullTitle": "@GET GET List of Users @GET GET List of Users - Negative Case as a User, I cannot get list of users with an invalid auth",
                  "timedOut": false,
                  "duration": 352,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await gorest.getListUser(pathGetListUser, 'a');\nassert(response.status).to.equal(401);\nassert(response.body.message).to.equal('Invalid token');",
                  "err": {},
                  "uuid": "2b340dd9-49b4-422b-b87a-0e578aebb3c7",
                  "parentUUID": "9af46eef-6316-420a-aab6-d420ab0ebb4a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b340dd9-49b4-422b-b87a-0e578aebb3c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 352,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}